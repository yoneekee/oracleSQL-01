SELECT * FROM EMP ORDER BY ENAME ASC;

-- 연봉 구해보기
SELECT ENAME AS 이름, SAL AS 월급, SAL*12 AS 연봉 FROM EMP;

-- 오름차순, 내림차순
SELECT * FROM EMP ORDER BY DEPTNO ASC, SAL DESC;

-- 하나만 조회
SELECT * FROM EMP WHERE EMPNO = 7566;

-- DEPTNO 30
SELECT * FROM EMP WHERE DEPTNO = 30 AND JOB = 'SALESMAN';
SELECT * FROM EMP WHERE DEPTNO = 30 OR JOB = 'SALESMAN';

-- SAL 3000 이상
SELECT * FROM EMP WHERE SAL >= 3000;

-- SAL 3000이 아닌 사람
SELECT * FROM EMP WHERE SAL NOT IN 3000;
SELECT * FROM EMP WHERE SAL <> 3000;
SELECT * FROM EMP WHERE SAL ^= 3000;
SELECT * FROM EMP WHERE SAL != 3000;

-- JOB 
SELECT * FROM EMP WHERE JOB = 'MANAGER' OR JOB = 'CLERK';
SELECT * FROM EMP WHERE JOB IN ( 'MANAGER', 'CLERK' );
SELECT * FROM EMP WHERE JOB NOT IN ( 'MANAGER', 'CLERK' );
SELECT * FROM EMP WHERE DEPTNO IN (10, 20);

-- 사이의 값
SELECT * FROM EMP WHERE SAL BETWEEN 2000 AND 3000;
SELECT * FROM EMP WHERE EMPNO BETWEEN 7000 AND 7600;
SELECT * FROM EMP WHERE ENAME BETWEEN 'A' AND 'D';

-- LIKE 연산자
SELECT * FROM EMP WHERE ENAME LIKE 'S%';
SELECT * FROM EMP WHERE ENAME LIKE '%S%';
SELECT * FROM EMP WHERE ENAME LIKE 'A%';
SELECT * FROM EMP WHERE ENAME LIKE '_L%';
SELECT * FROM EMP WHERE ENAME LIKE '%AM%';
SELECT * FROM EMP WHERE ENAME LIKE '%M%I%';
SELECT * FROM EMP WHERE ENAME LIKE '%A%' AND ENAME LIKE '%M%';
SELECT * FROM EMP WHERE ENAME LIKE '%ER';

-- 몇 번째 글짜
SELECT * FROM EMP WHERE ENAME LIKE '_L%';
SELECT * FROM EMP WHERE ENAME LIKE '__A%';
SELECT * FROM EMP WHERE ENAME LIKE '_____';

-- NULL CHECK
SELECT * FROM EMP WHERE COMM IS NOT NULL;

-- GROUP BY
SELECT AVG(SAL) AS 평균급여, DEPTNO FROM EMP; -- 오류남
SELECT AVG(SAL) AS 평균급여, DEPTNO FROM EMP GROUP BY DEPTNO;
SELECT DEPTNO, JOB, AVG(SAL) FROM EMP GROUP BY JOB; -- 오류남
SELECT DEPTNO, JOB, AVG(SAL) FROM EMP GROUP BY DEPTNO, JOB;
SELECT ENAME, DEPTNO, AVG(SAL) FROM EMP GROUP BY DEPTNO, ENAME;

-- 1
SELECT * FROM EMP WHERE ENAME LIKE '%S';
-- 2 
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO FROM EMP 
WHERE DEPTNO = 30 AND JOB = 'SALESMAN';
-- 3
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO FROM EMP 
WHERE DEPTNO IN (20, 30) AND SAL > 2000;
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO FROM EMP WHERE DEPTNO IN (20, 30) 
MINUS SELECT EMPNO, ENAME, JOB, SAL, DEPTNO FROM EMP 
WHERE DEPTNO IN (20, 30) AND SAL <= 2000;
-- 4
SELECT * FROM EMP 
WHERE SAL < 2000 OR SAL > 3000;
-- 5
SELECT ENAME, EMPNO, SAL, DEPTNO FROM EMP 
WHERE SAL NOT BETWEEN 1000 AND 2000 AND ENAME LIKE '%E%' AND DEPTNO = 30;
-- 6
SELECT * FROM EMP 
WHERE ENAME NOT LIKE '_L%' 
AND JOB IN ('MANAGER', 'CLERK')
AND MGR IS NOT NULL;

-- UNION / INTERSECT
SELECT * FROM EMP WHERE DEPTNO = 10 
UNION SELECT * FROM EMP WHERE DEPTNO = 10;
SELECT * FROM EMP WHERE DEPTNO = 10 
UNION ALL SELECT * FROM EMP WHERE DEPTNO = 10;
SELECT * FROM EMP INTERSECT
SELECT * FROM EMP WHERE DEPTNO = 10;

-- 오라클 함수
SELECT ENAME, UPPER(ENAME), LOWER(ENAME), INITCAP(ENAME) FROM EMP;
SELECT * FROM EMP;
SELECT ENAME, LENGTH(ENAME) FROM EMP;
SELECT ENAME FROM EMP WHERE LENGTH(ENAME) = 6;
SELECT LENGTH('오라클'), LENGTHB('오라클 SQL') FROM DUAL;

-- DUMMY TABLE 
-- DUAL

-- 글자 잘라내기
SELECT JOB, SUBSTR(JOB, 1, 2) FROM EMP;
SELECT JOB, SUBSTR(JOB, 1, 2), SUBSTR(JOB, -3, 2), SUBSTR(JOB, -3) FROM EMP;
SELECT SUBSTR(JOB, -LENGTH(JOB)) FROM EMP;

-- 문자열의 위치를 찾는 함수
SELECT INSTR('HELLO, ORACLE', 'L') FROM DUAL;
SELECT INSTR('HELLO, ORACLE', 'L', 1, 2) FROM DUAL; -- 1번부터 찾는데 두 번째 L
SELECT INSTR('Oracle databases 11g releases', 'DATABASES') FROM DUAL;
SELECT INSTR('Oracle databases 11g releases', LOWER('DATABASES')) FROM DUAL;
SELECT * FROM EMP WHERE INSTR(ENAME, 'S') > 0;

-- REPLACE
SELECT '010-1111-2222' AS ORIGINAL, 
REPLACE('010-1111-2222', '-', ' ') AS NEW1, 
REPLACE('010-1111-2222', '-') AS NEW2 FROM DUAL;
SELECT '010 1111-2222' AS ORIGINAL, 
REPLACE(REPLACE('010 1111-2222', '-'), ' ') AS NEW1 FROM DUAL;


-- RPAD, LPAD
SELECT 'ORACLE' AS ORACLE,
LPAD('ORACLE', 10, '#') AS LPAD1,
RPAD('ORACLE', 10, '#') AS RPAD1,
LPAD('ORACLE', 10) AS LPAD2,
RPAD('ORACLE', 10) AS RPAD2
FROM DUAL;
SELECT RPAD(SUBSTR(ENAME, 1, 2), LENGTH(ENAME), '*') FROM EMP; 

